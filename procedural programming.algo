PROCEDURE dot_product(v1,v2 : ARRAY_OF INTEGER, VAR dot : INTEGER)
VAR
    i : INTEGER;
BEGIN
    dot :=0;
    i:=0;
    IF (v1.length <> v2.length) THEN
        Write("enter vectors with same size!");
        dot := NaN;
    ELSE
     WHILE (i <v1.length ) DO
        dot := dot + v1[i]*v2[i];
     END_WHILE
    END_IF
END

----------------------------------------------------------------------------------------------

ALGORITHM orth_vectors
VAR
    v1,v2 : ARRAY_OF INTEGER [];
    dot : INTEGER;
BEGIN
    dot_product(v1,v2,dot);
    IF (dot = 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END

-----------------------------------------------------------------------------------------------

FUNCTION dot_product(v1,v2 : ARRAY_OF INTEGER) : INTEGER
VAR
    i : INTEGER;
    dot : INTEGER;
BEGIN
    dot :=0;
    i:=0;
    IF (v1.length <> v2.length) THEN
        Write("enter vectors with same size!");
        dot := NaN;
    ELSE
     WHILE (i <v1.length ) DO
        dot := dot + v1[i]*v2[i];
     END_WHILE
    END_IF
    RETURN dot ;
END

------------------------------------------------------------------------------------------------

ALGORITHM orth_vectors
VAR
    v1,v2 : ARRAY_OF INTEGER [];
    dot : INTEGER;
BEGIN
    dot := dot_product(v1,v2);
    IF (dot = 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END